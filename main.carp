(Debug.sanitize-addresses)

(load "SDL.carp")
(load "SDL_image.carp")
(load "Geometry.carp")

(use Array)
(use SDL)

(deftype Art
    [corvette (Ptr SDL_Texture)])

(def art (Art.init NULL))
(def img-dir "./img")

(deftype Vec2
  [x Float
   y Float])

(defmodule Vec2
  (defn add [a b]
    (Vec2.init (+ @(Vec2.x a) @(Vec2.x b))
               (+ @(Vec2.y a) @(Vec2.y b)))))

(deftype Obj
    [pos Vec2
     radius Float
     dir Float])

(defmodule Obj
  (defn draw [rend o]
    (let [img @(Art.corvette &art)
          pos (Obj.pos o)
          dims (SDL.dimensions img)
          w @(SDL_Rect.w &dims)
          h @(SDL_Rect.h &dims)]
      (SDL.render-copy-ex rend
                          img
                          (address dims)
                          (address (SDL.rect (- (Float.to-int @(Vec2.x pos)) (/ w 2))
                                             (- (Float.to-int @(Vec2.y pos)) (/ h 2))
                                             w
                                             h))
                          (- 360.0 (Geometry.radians-to-degree (Double.from-float @(Obj.dir o))))
                          (address (SDL.point (/ w 2) (/ h 2)))
                          SDL.flip-none)))
  (defn tick [o]
    (let [pos @(Obj.pos &o)
          dir @(Obj.dir &o)
          new-pos (Vec2.add &pos &(Vec2.init (Float.cos dir) (* -1.0f (Float.sin dir))))]
      (Obj.set-pos o new-pos))))

(defn-do draw [app rend state]
  (bg rend &(rgb 30 40 50))
  (SDL.render-clear rend)
  (foreach [o state] (Obj.draw rend o)))

(defn-do tick [state]
  ;;(println* (SDL.get-ticks))
  (endo-map Obj.tick state))

;; (sig make-state (Fn [] (Array Obj)))
(defn make-state []
  [(Obj.init (Vec2.init 0.0f 0.0f) 10.0f (* pi 1.75f))])

(defn-do load-assets [rend]
  (set! art (Art.init (IMG.load-texture rend (cstr &(str* img-dir "/Corvette.png"))))))

(defn main []
  (let-do [app (SDLApp.create "Dependency Day" 300 200)
           state (make-state)
           rend @(SDLApp.renderer &app)]
    (load-assets rend)
    (SDLApp.run-with-callbacks &app SDLApp.quit-on-esc tick draw state)))
